{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseList.js","components/Expenses/ExpenseFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","useState","title","setTitle","dob","month_diff","Date","now","getTime","getUTCFullYear","age","Math","abs","onClick","console","log","ExpenseList","items","length","map","expense","name","id","ExpensesFilter","currentExpenseYear","currentEnteredExpenseYear","value","onChange","event","expenseYear","target","onSaveExpenseYear","ChartBar","PerValue","maxValue","round","toString","style","height","label","Chart","valueArray","dataPoints","dataPoint","totalMax","max","ExpensesChart","chartDataPoints","expenses","expensesData","expenseMonth","getMonth","Expenses","setExpenseYear","filterHandler","filter","enteredExpenseYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","amount","onSaveExpenseData","type","min","cancelEditing","NewExpense","EditingBoxResult","setEditingBoxResult","enteredExpenseData","random","onAddExpense","initialExpenses","App","setExpenses","previousData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00ca9002.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props) {\r\n\tconst month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n\tconst day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n\tconst year = props.date.getFullYear();\r\n\t\r\n\r\n\treturn (\r\n\t\t<div className=\"expense-date\">\r\n\t\t\t<div className=\"expense-date__month\">{month}</div>\r\n\t\t\t<div className=\"expense-date__year\">{year}</div>\r\n\t\t\t<div className=\"expense-date__day\">{day}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import \"./card.css\";\r\n\r\nfunction Card(props) {\r\n\tconst classes = \"card \" + props.className;\r\n\r\n\treturn <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import ExpenseDate from \"./ExpenseDate\";\r\nimport React, {useState} from \"react\";\t\t//all the hooks components starts with use, here its useState\r\nimport Card from \"../UI/card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nfunction ExpenseItem(props) {\r\n\tconst [title, setTitle] = useState(props.title);\t\t//initially title = props.title\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t//its basically a array, first item is the varible name that holds the value, \r\n\t\t\t\t\t\t\t\t//second a function which updates current value and re-executes the function\r\n\t\t\t\t\t\t\t\t//function name should be of the form => set{Varible name with 1st letter caps} EX: here setTitle\r\n\t\t\t\t\t\t\t\t//it should be called only inside the function, one of the hooks concept, \r\n\t\t\t\t\t\t\t\t//a change in the varable of useState => re runs the whole function and updates the varable in all places \r\n\t \t\t\t\t\t\t\t//when whole thing runs again but, the useState will run only one time ie. for the first time[speaking about initializing]\r\n\tconst clickHandler = () =>\r\n\t{\r\n\t\tsetTitle(\"Updated dude\")\t\t//this is how we update it\r\n\t\tconsole.log(title)\r\n\t}\r\n\tvar getYear = 0;\r\n\tvar dob = props.date;\r\n\t//calculate month difference from current date in time\r\n\tvar month_diff = Date.now() - dob.getTime();\r\n\r\n\t//convert the calculated difference in date format\r\n\tvar age_dt = new Date(month_diff);\r\n\r\n\t//extract year from date\r\n\tvar year = age_dt.getUTCFullYear();\r\n\r\n\t//now calculate the age of the user\r\n\tvar age = Math.abs(year - 1970);\r\n\r\n\t\r\n\treturn (\r\n\t\t<Card className=\"expense-item\">\r\n\t\t\t<ExpenseDate date={props.date}  />\r\n\t\t\t<div className=\"expense-item__description\">\r\n\t\t\t\t<h2>{title}</h2>\r\n\r\n\t\t\t\t<div className=\"expense-item__price\">Age: {age}</div>\r\n\t\t\t\t<button onClick={clickHandler}>ChangeTitle</button>\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\"\r\nimport \"./ExpenseList.css\"\r\n\r\nconst ExpenseList = (props) =>\r\n{\r\n    if(props.items.length == 0)\r\n    {\r\n        return <h2 className=\"expenses-list__fallback\">NONE</h2>\r\n    }\r\n    return(\r\n           <ul className = \"expenses-list\">\r\n\t\t\t\t{props.items.map((expense) => (\r\n\t\t\t\t\t<ExpenseItem\r\n\t\t\t\t\t\tkey = {expense.id}\r\n\t\t\t\t\t\ttitle={expense.name}\r\n\t\t\t\t\t\tage={expense.age}\r\n\t\t\t\t\t\tdate={expense.date}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\r\n\t\t\t\t))}\r\n            </ul>\r\n            \r\n    )\r\n}\r\n\r\nexport default ExpenseList;","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n    const yearHandler = (event) => \r\n    {\r\n        const expenseYear = event.target.value;\r\n        props.onSaveExpenseYear(expenseYear);\r\n    }\r\n    const currentExpenseYear = props.currentEnteredExpenseYear\r\n\treturn (\r\n\t\t<div className=\"expenses-filter\">\r\n\t\t\t<div className=\"expenses-filter__control\">\r\n\t\t\t\t<label>Filter by year</label>\r\n\t\t\t\t<select value={currentExpenseYear} onChange={yearHandler}>\r\n\t\t\t\t\t<option value=\"2022\">2022</option>\r\n\t\t\t\t\t<option value=\"2021\">2021</option>\r\n\t\t\t\t\t<option value=\"2020\">2020</option>\r\n\t\t\t\t\t<option value=\"2019\">2019</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\"\r\n\r\nconst ChartBar = (props) =>\r\n{\r\n    let PerValue = 0 \r\n    if(props.maxValue >0 )\r\n    {\r\n        PerValue = Math.round( (props.value / props.maxValue) *100 ).toString() + \"%\";\r\n    }\r\n\r\n    return (\r\n\t\t\t<div className=\"char-bar\">\r\n\t\t\t\t<div className=\"chart-bar__inner\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"chart-bar__fill\"\r\n\t\t\t\t\t\tstyle={{ height: PerValue }}\r\n\t\t\t\t\t></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"chart-bar__label\">{props.label}</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n}\r\n\r\nexport default ChartBar;","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\"\r\n\r\nconst Chart = (props) => \r\n{\r\n    let valueArray = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMax = Math.max(...valueArray)\r\n\r\n\r\n    return(\r\n        <div className=\"chart\">\r\n        {props.dataPoints.map( (dataPoint) => (\r\n            <ChartBar\r\n            key = {dataPoint.label}\r\n            value = {dataPoint.value}\r\n            label = {dataPoint.label}\r\n            maxValue = {totalMax}\r\n            /> ))}\r\n        </div>\r\n            \r\n    );\r\n}\r\n\r\nexport default Chart;","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => \r\n{\r\n    let chartDataPoints = [\r\n\t\t\t{ label: \"Jan\", value: 0 },\r\n\t\t\t{ label: \"Feb\", value: 0 },\r\n\r\n\t\t\t{ label: \"Mar\", value: 0 },\r\n\t\t\t{ label: \"Apr\", value: 0 },\r\n\t\t\t{ label: \"May\", value: 0 },\r\n\t\t\t{ label: \"Jun\", value: 0 },\r\n\t\t\t{ label: \"Jul\", value: 0 },\r\n\t\t\t{ label: \"Aug\", value: 0 },\r\n\t\t\t{ label: \"Sep\", value: 0 },\r\n\t\t\t{ label: \"Oct\", value: 0 },\r\n\t\t\t{ label: \"Nov\", value: 0 },\r\n\t\t\t{ label: \"Dec\", value: 0 },\r\n\t\t];\r\n\r\n        for(const expensesData of props.expenses)\r\n        {\r\n            const expenseMonth = expensesData.date.getMonth();\r\n\t\t\tif(expenseMonth === expensesData.date.getMonth() )\r\n            chartDataPoints[expenseMonth].value += 1;\r\n        }\r\n        return(\r\n            <div>\r\n                <Chart dataPoints = {chartDataPoints}/>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ExpensesChart","import React, {useState} from \"react\";\r\nimport ExpenseList from \"./ExpenseList\";\r\nimport Card from \"../UI/card\";\r\nimport ExpensesFilter from \"./ExpenseFilter\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\n\r\nfunction Expenses(props) {\r\n\tconst [expenseYear, setExpenseYear] = useState('2021');\r\n\t\r\n\r\n\tconst expenseYearHandler = (enteredExpenseYear) =>\r\n\t{\r\n\t\tconst expenseYear = enteredExpenseYear;\r\n\t\tconsole.log(\"Its expense js dude\")\r\n\t\tconsole.log(expenseYear);\r\n\t\tsetExpenseYear(expenseYear)\r\n\t}\r\n\r\n\tconst filterHandler = props.items.filter(expense => {\r\n\t\tconst year = expense.date.getFullYear().toString();\r\n\t\treturn year === expenseYear;\r\n\t});\r\n\t\r\n\t\r\n\r\n\treturn (\r\n\t\t<li>\r\n\t\t\t<Card className=\"expenses\">\r\n\t\t\t\t\r\n\t\t\t\t <ExpensesFilter\r\n\t\t\t\t\tonSaveExpenseYear={expenseYearHandler}\r\n\t\t\t\t\tcurrentEnteredExpenseYear={expenseYear}\r\n\t\t\t\t\t\r\n\t\t\t\t/> \r\n\t\t\t\t<ExpensesChart expenses = {filterHandler} />\r\n\t\t\t\t<ExpenseList items = {filterHandler}/>\r\n\t\t\t\t\r\n\t\t\t</Card>\r\n\t\t</li>\r\n\t);\r\n}\r\n\r\nexport default Expenses;\r\n","import React, {useState} from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) =>\r\n{                                                            //we can have multiple state inside a component\r\n    const [enteredTitle, setEnteredTitle] = useState('');   //varable to store the datas\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');     //reason for giivng cotes => see amountChange function\r\n\r\n                            //now this uses more useState, we can also do it in single useState\r\n    // const [userInput, setUserInput] = useState({    //here insted of passing string, we pass a object of datas\r\n    //     enteredTitle : '',\r\n    //     enteredAmount : '',\r\n    //     enteredDate : ''\r\n\r\n    // });\r\n\r\n                            \r\n    const titleChangeHandle = (event) =>         //here we get the input value through a object => event{object}\r\n    {\r\n\t\t\t//inside event - target - value is present, every time value changes this function runs again\r\n\t\t\tsetEnteredTitle(event.target.value);\r\n\t\t\t//...userInput => is for writting all the useState datas, at last we update one varible data\r\n\r\n\t\t\t//  setUserInput({                          //this is how we update, by updating we replace all the existing useState so we use ...userInput\r\n\r\n\t\t\t//     ...userInput,\r\n\t\t\t//     enteredTitle : event.target.value\r\n\t\t\t// })\r\n\t\t//\r\n            // in above  //here we have a problem of getting previously updated state => can cause problems sharing,(get outdated value)\r\n            //do like this: \r\n\r\n            // setUserInput( (prevState) =>\r\n            // {\r\n            //     return \r\n            //     { ...prevState, enteredTitle : event.target.value };\r\n            // });\r\n\r\n\r\n\t\t\t// console.log(event.target.value);\r\n\t\t};\r\n\r\n    const amountChangeHandle = (event) =>\r\n    {\r\n        setEnteredAmount(event.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredAmount : event.target.value\r\n        // })\r\n        // console.log(event.target.value);            //it will return a number in the form of string\r\n    }\r\n    const dateChangeHandle = (event) => {\r\n\t\t\tsetEnteredDate(event.target.value);\r\n            // setUserInput({\r\n            //     ...userInput,\r\n            //     enteredDate : event.target.value\r\n            // })\r\n\t\t\t// console.log(event.target.value);\r\n\t\t};\r\n\r\n        //extra my work\r\n        const clearHandler = () =>\r\n        {\r\n            props.cancelEditing();\r\n        }\r\n        \r\n\r\n\r\n\r\n        const submitHandler = (\r\n\t\t\t\tevent //when we try to click submit the page gets refreshed => which tries to hand submit at backed\r\n\t\t\t) => {\r\n\t\t\t\t//here we don't do that so we stop it happening by\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tconst expenseData = {\r\n\t\t\t\t\tname: enteredTitle, \r\n\t\t\t\t\tamount: enteredAmount,\r\n\t\t\t\t\tdate: new Date(enteredDate),\r\n\t\t\t\t};\r\n\r\n\t\t\t\t//stoing data inside object\r\n\t\t\t\t//after submission empties the whole input boxes\r\n\r\n\t\t\t\t//after reading all => we gona send data from child to parent by passing data as a argument to a function in the parent\r\n\t\t\t\t//first get the function using props, access and attatch the object to it\r\n                //calling a parent function from child component\r\n\t\t\t\t//using props we brought the function\r\n                props.onSaveExpenseData(expenseData);       //its the function which carries object\r\n\t\t\t\tsetEnteredTitle(\"\");\r\n\t\t\t\tsetEnteredAmount(\"\");\r\n\t\t\t\tsetEnteredDate(\"\");\r\n\t\t\t};\r\n\r\n        //2-way binding => get the value and give again the value to the input\r\n        \r\n\r\n    \r\n    return (\r\n\t\t\t<form onSubmit = {submitHandler}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"new-expense__controls\">\r\n\t\t\t\t\t\t<div className=\"new-expense__controls\">\r\n\t\t\t\t\t\t\t<label>Name</label>\r\n\t\t\t\t\t\t\t<input type=\"text\" value={enteredTitle} onChange={titleChangeHandle }/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className=\"new-expense__controls\">\r\n\t\t\t\t\t\t\t<label>Date Of Birth</label>\r\n\t\t\t\t\t\t\t<input type=\"date\" min=\"2019-01-01\" value={enteredDate} onChange={dateChangeHandle} max=\"2021-8-29\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"new-expense_actions\">\r\n                        <button onClick={clearHandler}>Clear All</button>\r\n\t\t\t\t\t\t<button type=\"submit\">Add</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t);\r\n}\r\n\r\nexport default ExpenseForm;","import React, {useState} from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\n\r\nconst NewExpense = (props) =>\r\n{\r\n    const [EditingBoxResult, setEditingBoxResult] = useState(0);\r\n    const saveExpenseDataHandler = (enteredExpenseData) =>\r\n    {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id : Math.random().toString()\r\n        };\r\n        setEditingBoxResult(0);\r\n        console.log(expenseData);\r\n        props.onAddExpense(expenseData);\r\n        \r\n        \r\n\r\n    }\r\n\r\n    const createNewExpenseButton = () =>\r\n    {\r\n        \r\n        setEditingBoxResult(1);\r\n    }\r\n    \r\n    const cancelEditingHandler = () =>\r\n    {\r\n        setEditingBoxResult(0);\r\n    }\r\n    \r\n\r\n    return (\r\n\t\t\t<div className=\"new-expense\">\r\n\t\t\t\t{EditingBoxResult === 0 && (\r\n\t\t\t\t\t<button onClick={createNewExpenseButton}>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tAdd a New Person's D'Birth\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t\t{EditingBoxResult > 0 && (\r\n\t\t\t\t\t<ExpenseForm\r\n\t\t\t\t\t\tonSaveExpenseData={saveExpenseDataHandler}\r\n\t\t\t\t\t\tcancelEditing={cancelEditingHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default NewExpense;","import React, {useState} from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst initialExpenses = [\n\t{\n\t\tid: \"e1\",\n\t\tname: \"John\",\n\t\tage: 0,\n\t\tdate: new Date(2020, 7, 14),\n\t},\n\t{\n\t\tid: \"e2\",\n\t\tname: \"Han\",\n\t\tage: 0,\n\t\tdate: new Date(2021, 2, 12),\n\t},\n\t{\n\t\tid: \"e3\",\n\t\tname: \"Darwin\",\n\t\tage: 0,\n\t\tdate: new Date(2021, 2, 28),\n\t},\n\t{\n\t\tid: \"e4\",\n\t\tname: \"Brad\",\n\t\tage: 0,\n\t\tdate: new Date(2021, 5, 12),\n\t},\n];\n\nfunction App() {\n\tconst [expenses, setExpenses] = useState(initialExpenses);\n\tconst addExpenseHandler = (enteredExpenseData) =>\n\t{\n\t\t\n\t\tsetExpenses( previousData => {\n\t\t\treturn [enteredExpenseData, ...previousData];\n\t\t} );\n\t\t\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<NewExpense onAddExpense = {addExpenseHandler} />\n\t\t\t<Expenses items={expenses} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}